{
  "keywords": ["python", "with open", "file handling", "context manager", "__enter__", "__exit__", "字节码", "bytecode", "dis module", "Python内核源码", "ceval.c", "SETUP_WITH", "WITH_EXCEPT_START", "POP_JUMP_IF_TRUE", "RERAISE", "finally", "exception handling", "文件关闭", "自动关闭", "底层实现"],
  "description": "深入剖析 Python 中 `with open() as f:` 语句的执行过程，通过 dis 模块查看字节码，分析 Python 内核源码 (ceval.c) 中 SETUP_WITH, WITH_EXCEPT_START 等指令，解释为什么使用 with 打开文件后无需手动关闭。文章结合 Python 3.7 和 3.10 的字节码差异，详细阐述 with 语句的底层实现机制，以及 __enter__ 和 __exit__ 方法的作用。",
  "title": "Python with open() 深入解析：为什么无需手动关闭文件？"
}
