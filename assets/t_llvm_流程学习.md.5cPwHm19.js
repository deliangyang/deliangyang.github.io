import{_ as a,c as t,a3 as e,o as i}from"./chunks/framework.BOyF8YV7.js";const h=JSON.parse(`{"title":"LLVM学习指南：教程、API及开发项目脚手架","description":"Learn LLVM through official tutorials and documentation.  This guide covers LLVM APIs, including string handling, error handling, data structures, multithreading, and core objects like Module, Value, Function, and BasicBlock.  Explore the LLVM programmer's manual and a project scaffolding example.","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://blog.ranchulin.com/t/llvm/流程学习.html"}],["meta",{"property":"og:title","title":"LLVM学习指南：教程、API及开发项目脚手架"}],["meta",{"property":"og:url","content":"https://blog.ranchulin.com/t/llvm/流程学习.html"}],["meta",{"name":"keywords","content":"LLVM,LLVM tutorial,LLVM documentation,LLVM APIs,LLVM programming,Compiler,Low-level virtual machine,Programmers manual,C++,Data structures,Multithreading,Module,Value,Instruction,Function,GlobalVariable,BasicBlock,Debug,Error handling,String manipulation"}]]},"headers":[],"relativePath":"t/llvm/流程学习.md","filePath":"t/llvm/流程学习.md","lastUpdated":1736299776000}`),r={name:"t/llvm/流程学习.md"};function o(n,l,s,m,c,d){return i(),t("div",null,l[0]||(l[0]=[e('<h2 id="llvm-学习之旅" tabindex="-1">LLVM 学习之旅 <a class="header-anchor" href="#llvm-学习之旅" aria-label="Permalink to &quot;LLVM 学习之旅&quot;">​</a></h2><p>官方提供了一个学习案例，实现一个小语言，地址：<a href="https://llvm.org/docs/tutorial/index.html" target="_blank" rel="nofollow noopener noreferrer">https://llvm.org/docs/tutorial/index.html</a></p><h2 id="llvm-程序员手册" tabindex="-1">LLVM 程序员手册 <a class="header-anchor" href="#llvm-程序员手册" aria-label="Permalink to &quot;LLVM 程序员手册&quot;">​</a></h2><p><a href="https://llvm.org/docs/ProgrammersManual.html" target="_blank" rel="nofollow noopener noreferrer">https://llvm.org/docs/ProgrammersManual.html</a></p><h3 id="llvm-apis" tabindex="-1">LLVM APIs <a class="header-anchor" href="#llvm-apis" aria-label="Permalink to &quot;LLVM APIs&quot;">​</a></h3><ol><li>字符串处理</li><li>字符串格式化</li><li>错误处理</li><li>函数和其它可回调对象？</li><li>debug</li><li>数据结构（链表、字符串、集合、字典、位） <ol><li>数组对象</li><li>固定数组</li><li>指针向量</li><li>小向量？</li><li>...</li></ol></li><li>多线程</li><li>核心对象 <ol><li>Module</li><li>Value</li><li>User</li><li>Instruction</li><li>Contant</li><li>GlobalValue</li><li>Fuction</li><li>GolbalVariable</li><li>BasicBlock</li><li>Argument</li></ol></li></ol><h2 id="llvm-开发项目脚手架" tabindex="-1">LLVM 开发项目脚手架 <a class="header-anchor" href="#llvm-开发项目脚手架" aria-label="Permalink to &quot;LLVM 开发项目脚手架&quot;">​</a></h2>',7)]))}const L=a(r,[["render",o]]);export{h as __pageData,L as default};
