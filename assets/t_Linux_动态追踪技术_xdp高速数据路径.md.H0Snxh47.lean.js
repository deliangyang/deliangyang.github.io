import{_ as a,c as e,a3 as r,o as i}from"./chunks/framework.BOyF8YV7.js";const d=JSON.parse('{"title":"Linux 高性能网络处理：XDP 和 TC 的原理及应用","description":"XDP (eXpress Data Path) 和 TC (Traffic Control) 是 Linux 内核中用于高性能网络处理的两种核心技术。XDP 提供高速数据路径，常用于 DDoS 防御、防护墙和 4 层负载均衡等应用。TC 通过分类器和执行器实现网络流量的整形调度和带宽控制。本文介绍了 XDP 和 TC 的基本原理、应用场景及对应的 BPF 程序类型。","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://blog.ranchulin.com/t/Linux/动态追踪技术/xdp高速数据路径.html"}],["meta",{"property":"og:title","title":"Linux 高性能网络处理：XDP 和 TC 的原理及应用"}],["meta",{"property":"og:url","content":"https://blog.ranchulin.com/t/Linux/动态追踪技术/xdp高速数据路径.html"}],["meta",{"name":"keywords","content":"XDP,eXpress Data Path,高速数据路径,BPF_PROG_TYPE_XDP,DDoS 防御,防护墙,4 层负载均衡,TC,Traffic Control,流量控制,BPF_PROG_TYPE_SCHED_CLS,BPF_PROG_TYPE_SCHED_ACT,Linux 流量控制,网络流量整形,带宽控制,网络处理,eBPF"}]]},"headers":[],"relativePath":"t/Linux/动态追踪技术/xdp高速数据路径.md","filePath":"t/Linux/动态追踪技术/xdp高速数据路径.md","lastUpdated":1736299776000}'),o={name:"t/Linux/动态追踪技术/xdp高速数据路径.md"};function l(n,t,P,_,s,c){return i(),e("div",null,t[0]||(t[0]=[r('<h2 id="xdp" tabindex="-1">XDP <a class="header-anchor" href="#xdp" aria-label="Permalink to &quot;XDP&quot;">​</a></h2><ul><li>eXpress Data Path, 高速数据路径</li><li>XDP 程序可以用来实现高性能的网络处理方案，常用于 DDos 防御、防护墙、4 层负载均衡等</li><li>BPF_PROG_TYPE_XDP</li></ul><h2 id="tc" tabindex="-1">TC <a class="header-anchor" href="#tc" aria-label="Permalink to &quot;TC&quot;">​</a></h2><ul><li>TC (Traffic Control, 流量控制) 程序、套接字程序 以及 cgroup 程序</li><li>对应的类型是 BPF_PROG_TYPE_SCHED_CLS 和 BPF_PROG_TYPE_SCHED_ACT，分别用于流量控制的分类器和执行器。Linux 流量控制通过网卡队列、排队规则、分类器、过滤器以及执行器实现了网络流量的整形调度和带宽控制。</li></ul>',4)]))}const u=a(o,[["render",l]]);export{d as __pageData,u as default};
