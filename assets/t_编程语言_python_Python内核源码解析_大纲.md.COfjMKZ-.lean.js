import{_ as t,c as i,a3 as e,o}from"./chunks/framework.BOyF8YV7.js";const u=JSON.parse('{"title":"Python 解释器深度解析：从基础到高级特性","description":"深入探讨 Python 解释器的运行机制，涵盖基础数据结构、内存管理、垃圾回收、作用域、解析过程 (Parse)、抽象语法树 (AST) 及其优化、操作码 (OpCode)、虚拟机 (VM)、栈帧、程序入口方式、C/C++ 扩展以及协程等核心概念。","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://blog.ranchulin.com/t/编程语言/python/Python内核源码解析/大纲.html"}],["meta",{"property":"og:title","title":"Python 解释器深度解析：从基础到高级特性"}],["meta",{"property":"og:url","content":"https://blog.ranchulin.com/t/编程语言/python/Python内核源码解析/大纲.html"}],["meta",{"name":"keywords","content":"Python,基础数据结构,内存分配,垃圾回收,作用域,全局变量,局部变量,Parse,AST,抽象语法树,AST优化,OpCode,操作码,虚拟机,VM,栈帧,程序入口,标准输入,命令行参数,交互式解释器,文件,__pycache__,C扩展,C++扩展,协程,Python解释器"}]]},"headers":[],"relativePath":"t/编程语言/python/Python内核源码解析/大纲.md","filePath":"t/编程语言/python/Python内核源码解析/大纲.md","lastUpdated":1736299776000}'),a={name:"t/编程语言/python/Python内核源码解析/大纲.md"};function n(r,l,c,h,p,s){return o(),i("div",null,l[0]||(l[0]=[e('<h2 id="大纲" tabindex="-1">大纲 <a class="header-anchor" href="#大纲" aria-label="Permalink to &quot;大纲&quot;">​</a></h2><ul><li>基础数据结构</li><li>内存分配</li><li>垃圾回收</li><li>生命周期？</li><li>作用域 <ul><li>全局 buildin</li><li>局部 local</li></ul></li><li>Parse</li><li>AST <ul><li>AST 优化</li></ul></li><li>OpCode <ul><li>操作码</li><li>携带参数，操作数</li></ul></li><li>VM 虚拟机</li><li>栈帧</li><li>程序入口 <ul><li>标准输入</li><li>命令行 <ul><li><code>python -c &#39;print(1);&#39;</code></li></ul></li><li>交互</li><li>文件</li><li>pycache</li></ul></li><li>c/c++ 扩展</li><li>协程</li></ul>',2)]))}const y=t(a,[["render",n]]);export{u as __pageData,y as default};
