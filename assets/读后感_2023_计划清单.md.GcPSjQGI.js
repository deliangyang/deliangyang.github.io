import{_ as t,c as i,a3 as l,o as e}from"./chunks/framework.BOyF8YV7.js";const m=JSON.parse('{"title":"技术与英语学习计划：编译原理、Rust、算法与数据结构以及英语写作","description":"这份学习计划涵盖了技术分享（编译原理、Lua/Python源码分析、Toy编译器实现、LLVM学习、Rust基础及相关框架、计算机网络）和英语学习（语法、词汇、写作）两大部分，包含了丰富的学习内容，例如各种算法、数据结构以及英语写作练习。","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://blog.ranchulin.com/读后感/2023/计划清单.html"}],["meta",{"property":"og:title","title":"技术与英语学习计划：编译原理、Rust、算法与数据结构以及英语写作"}],["meta",{"property":"og:url","content":"https://blog.ranchulin.com/读后感/2023/计划清单.html"}],["meta",{"name":"keywords","content":"写作练习,技术分享,编译原理,Lua,Python,Toy编译器,LLVM,Rust,async/await,tokio,actix-web,计算机网络,网络协议,数据结构与算法,算法,排序,查找,动态规划,回溯算法,分治算法,递归算法,递推算法,搜索算法,穷举算法,数据结构,线性表,树,图,堆,散列表,字符串,数组,队列,栈,英语学习,语法学习,词汇学习"}]]},"headers":[],"relativePath":"读后感/2023/计划清单.md","filePath":"读后感/2023/计划清单.md","lastUpdated":1736299776000}'),c={name:"读后感/2023/计划清单.md"};function a(k,s,o,b,d,h){return e(),i("div",null,s[0]||(s[0]=[l('<h2 id="写作练习" tabindex="-1">写作练习 <a class="header-anchor" href="#写作练习" aria-label="Permalink to &quot;写作练习&quot;">​</a></h2><ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 技术分享 <ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 编译原理 <ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> Lua 源码分析</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> Python 源码分析</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 自己实现 Toy 编译器</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> LLVM 学习</li></ul></li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> Rust <ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 基础语法</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> <code>async/await</code></li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> <code>tokio</code></li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> <code>actix-web</code></li></ul></li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 计算机网络 <ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 网络协议</li></ul></li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 数据结构与算法 <ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 算法 <ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 排序</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 查找</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 动态规划</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 回溯算法</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 分治算法</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 递归算法</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 递推算法</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 搜索算法</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 穷举算法</li></ul></li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 数据结构 <ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 线性表</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 树</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 图</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 堆</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 散列表</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 字符串</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 数组</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 队列</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 栈</li></ul></li></ul></li></ul></li></ul><h2 id="英语学习" tabindex="-1">英语学习 <a class="header-anchor" href="#英语学习" aria-label="Permalink to &quot;英语学习&quot;">​</a></h2><ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 语法学习</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 词汇学习</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 写作练习</li></ul>',4)]))}const p=t(c,[["render",a]]);export{m as __pageData,p as default};
