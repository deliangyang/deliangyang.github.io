import{_ as i,c as a,a3 as n,o as t}from"./chunks/framework.BOyF8YV7.js";const e="/assets/ghostty.BDagoBJU.png",c=JSON.parse('{"title":"Ubuntu 手动编译 Ghostty：体验强大的分屏终端利器！","description":"本文手把手教你如何在 Ubuntu 系统下手动编译安装 Ghostty 终端工具，包含详细的安装步骤、依赖包解决方法以及 Shell 集成配置，体验这款强大的分屏终端工具。","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://blog.ranchulin.com/t/Linux/Ubuntu下手动编译Linux终端工具Ghostty.html"}],["meta",{"property":"og:title","title":"Ubuntu 手动编译 Ghostty：体验强大的分屏终端利器！"}],["meta",{"property":"og:url","content":"https://blog.ranchulin.com/t/Linux/Ubuntu下手动编译Linux终端工具Ghostty.html"}],["meta",{"name":"keywords","content":"Ghostty,Ubuntu,Linux,终端工具,Zig,编译安装,GTK4,Shell集成,Bash,Zsh,Fish,Elvish,分屏终端,开源项目,手动编译"}]]},"headers":[],"relativePath":"t/Linux/Ubuntu下手动编译Linux终端工具Ghostty.md","filePath":"t/Linux/Ubuntu下手动编译Linux终端工具Ghostty.md","lastUpdated":1736299776000}'),l={name:"t/Linux/Ubuntu下手动编译Linux终端工具Ghostty.md"};function h(p,s,r,d,k,o){return t(),a("div",null,s[0]||(s[0]=[n(`<h1 id="ubuntu-下手动编译-linux-终端工具-ghostty" tabindex="-1">Ubuntu 下手动编译 Linux 终端工具 Ghostty <a class="header-anchor" href="#ubuntu-下手动编译-linux-终端工具-ghostty" aria-label="Permalink to &quot;Ubuntu 下手动编译 Linux 终端工具 Ghostty&quot;">​</a></h1><p>抱着好玩的心态，想在 Ubuntu 上试用一下 Ghostty 终端工具。官方未提供二进制程序下载，但是提供了 <a href="https://ghostty.org/docs/install/build" target="_blank" rel="nofollow noopener noreferrer">Linux 编译安装指南 Build From Source</a></p><p>Ghostty 是通过 Zig 编写的，所以需要先安装 Zig 编译器。安装 snap，然后通过 snap 安装 Zig。<a href="https://github.com/ziglang/zig/wiki/Install-Zig-from-a-Package-Manager#ubuntu-snap" target="_blank" rel="nofollow noopener noreferrer">Zig 安装指南</a></p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">snap</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> zig</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --classic</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --beta</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>安装好 Zig 后，就可以开始编译 Ghostty 了。</p><h2 id="编译安装" tabindex="-1">编译安装 <a class="header-anchor" href="#编译安装" aria-label="Permalink to &quot;编译安装&quot;">​</a></h2><h3 id="下载源码" tabindex="-1">下载源码 <a class="header-anchor" href="#下载源码" aria-label="Permalink to &quot;下载源码&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git@github.com:ghostty-org/ghostty.git</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ghostty</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">zig</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Doptimize=ReleaseFast</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>如果直接运行 <code>zig build</code>，会报错：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">warning:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pkg-config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> had</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> errors:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Package</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gtk4</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> was</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> not</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> found</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pkg-config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> search</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> path.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Perhaps</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> you</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> should</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> directory</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> containing</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gtk4.pc&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">to the PKG_CONFIG_PATH environment variable</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">No package &#39;gtk4&#39; found</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">warning: pkg-config: Exited with code 1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">error: Unexpected</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/home/newdisk/ghostty/build.zig:146:17: 0x117a4c6 in build (build)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                return error.Unexpected;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                ^</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/snap/zig/11625/lib/std/Build.zig:2117:24: 0x113f0a7 in runBuild__anon_8858 (build)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        .ErrorUnion =&gt; try build_zig.build(b),</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                       ^</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/snap/zig/11625/lib/compiler/build_runner.zig:301:9: 0x113a3cf in main (build)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        try builder.runBuild(root);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        ^</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">error: the following build command failed with exit code 1:</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>这是因为缺少 gtk4 的依赖，需要安装 gtk4 的开发包。</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libgtk-4-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libadwaita-1-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>安装好依赖后，再次运行 <code>zig build -Doptimize=ReleaseFast</code>，就可以成功编译了。</p><h2 id="启动-ghostty" tabindex="-1">启动 Ghostty <a class="header-anchor" href="#启动-ghostty" aria-label="Permalink to &quot;启动 Ghostty&quot;">​</a></h2><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> zig-out/bin/ghostty</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./zig-out/bin/ghostty</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="查看效果" tabindex="-1">查看效果 <a class="header-anchor" href="#查看效果" aria-label="Permalink to &quot;查看效果&quot;">​</a></h2><p><img src="`+e+'" alt="Ghostty"></p><h2 id="终端集成了-bash、zsh、fish、elvish" tabindex="-1">终端集成了 Bash、Zsh、Fish、Elvish <a class="header-anchor" href="#终端集成了-bash、zsh、fish、elvish" aria-label="Permalink to &quot;终端集成了 Bash、Zsh、Fish、Elvish&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:center;">Shell</th><th style="text-align:left;">Integration</th></tr></thead><tbody><tr><td style="text-align:center;">bash</td><td style="text-align:left;">${GHOSTTY_RESOURCES_DIR}/shell-integration/bash/ghostty.bash</td></tr><tr><td style="text-align:center;">fish</td><td style="text-align:left;">&quot;$GHOSTTY_RESOURCES_DIR&quot;/shell-integration/fish/vendor_conf.d/ghostty-shell-integration.fish</td></tr><tr><td style="text-align:center;">zsh</td><td style="text-align:left;">${GHOSTTY_RESOURCES_DIR}/shell-integration/zsh/ghostty-integration</td></tr><tr><td style="text-align:center;">elvish</td><td style="text-align:left;">${GHOSTTY_RESOURCES_DIR}/shell-integration/elvish/lib/ghostty-integration.elv</td></tr></tbody></table><p>设置默认终端为 Fish</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.config/ghostty/config</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">shell-integration</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> fish</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>修改之后重新启动 Ghostty，就可以在终端日志中看到 Fish 的集成信息。</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">info(io_exec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">): found Ghostty resources dir: /home/newdisk/ghostty/zig-out/share/ghostty</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">info(io_exec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">): shell integration automatically injected shell</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">termio.shell_integration.Shell.fish</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="感受" tabindex="-1">感受 <a class="header-anchor" href="#感受" aria-label="Permalink to &quot;感受&quot;">​</a></h2><p>Ghostty 是一个很有趣的终端工具，可以分屏，比 Ubuntu 自带的终端要强一些，集成了多种 Shell，可以让用户自由选择。但是目前还是一个早期版本，功能还不够完善，有些功能还不够稳定。不过，作为一个开源项目，相信未来会越来越好。</p>',25)]))}const u=i(l,[["render",h]]);export{c as __pageData,u as default};
