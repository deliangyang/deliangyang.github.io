import{_ as i,c as a,a3 as n,o as e}from"./chunks/framework.BOyF8YV7.js";const g=JSON.parse('{"title":"Linux grep 命令详解及常用参数实战教程","description":"Linux命令行工具grep详解，包含正则表达式匹配、输出控制、上下文控制等常用参数及示例，以及grep在文本处理中的高效应用技巧。学习如何使用grep快速查找和过滤文件内容，提高工作效率。","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://blog.ranchulin.com/t/Linux/2020/2020-12-16-grep-parameters.html"}],["meta",{"property":"og:title","title":"Linux grep 命令详解及常用参数实战教程"}],["meta",{"property":"og:url","content":"https://blog.ranchulin.com/t/Linux/2020/2020-12-16-grep-parameters.html"}],["meta",{"name":"keywords","content":"grep,linux,命令行工具,正则表达式,-E,-F,-G,-P,-i,-o,-r,--include,--exclude,-a,-B,-A,-C,--color,-v,文本处理,正则匹配,perl正则表达式,递归查找,文件查找,日志查找,grep 参数,grep 教程"}]]},"headers":[],"relativePath":"t/Linux/2020/2020-12-16-grep-parameters.md","filePath":"t/Linux/2020/2020-12-16-grep-parameters.md","lastUpdated":1736299776000}'),l={name:"t/Linux/2020/2020-12-16-grep-parameters.md"};function t(h,s,p,k,r,d){return e(),a("div",null,s[0]||(s[0]=[n(`<p>grep 是 liunx 下的一个命令行工具，可以通过正则模式搜索文件，或者通过管道匹配标准输入。grep 的参数分为 4 大类，可以通过<code>grep --help</code>或者<code>man grep</code>查看所有的参数，如下是官方介绍。</p><blockquote><p>grep searches for PATTERNS in each FILE. PATTERNS is one or more patterns separated by newline characters, and grep prints each line that matches a pattern. Typically PATTERNS should be quoted when grep is used in a shell command.</p></blockquote><blockquote><p>A FILE of &quot;-&quot; stands for standard input. If no FILE is given, recursive searches examine the working directory, and nonrecursive searches read standard input.</p></blockquote><blockquote><p>In addition, the variant programs egrep and fgrep are the same as grep -E and grep -F, respectively. These variants are deprecated, but are provided for backward compatibility.</p></blockquote><p>下面就让我们了解一下这四大类中比较常用的参数</p><h3 id="测试案例文件内容" tabindex="-1">测试案例文件内容 <a class="header-anchor" href="#测试案例文件内容" aria-label="Permalink to &quot;测试案例文件内容&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">phantom:~</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ydl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a.txt</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[master 9f69e31] docs: add post 2020-12-15</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> changed,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 192</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> insertions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mode</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100644</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> _posts/linux/2020/2020-12-15-simple-command-in-curl.md</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Counting</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> objects:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 6,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> done.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Delta</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compression</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> using</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> up</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> threads.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Compressing</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> objects:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 100%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (6/6), done.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Writing</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> objects:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 100%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (6/6), 2.97 KiB </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 2.97</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> MiB/s,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> done.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Total</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (delta </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), reused 0 (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">delta</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">remote:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Resolving</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> deltas:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 100%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (2/2), completed with 2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> objects.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">To</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> github.com:deliangyang/sntflyv.github.io.git</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   1600d5e..9f69e31</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  master</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> -</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> master</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="正则表达式分隔-以及匹配模式的选择" tabindex="-1">正则表达式分隔，以及匹配模式的选择 <a class="header-anchor" href="#正则表达式分隔-以及匹配模式的选择" aria-label="Permalink to &quot;正则表达式分隔，以及匹配模式的选择&quot;">​</a></h3><ul><li>-E 或 --extended-regexp 将样式为延伸的正则表达式来使用。</li><li>-F 或 --fixed-regexp 将样式视为固定字符串的列表。</li><li>-G 或 --basic-regexp 将样式视为普通的表示法来使用。</li><li>-P 或 --perl-regexp 可以让 grep 使用 perl 的正则表达式语法，因为 perl 的正则更加多元化，能实现更加复杂的场景。</li></ul><p>正则风格有四种，个人比较喜欢<code>Perl regular expressions</code>，像 PHP 中<code>preg_match</code>、<code>preg_replace</code>等函数用到的正则表达式。这里就不详细的介绍正则表达式了。</p><blockquote><p>phantom:~ ydl$ cat a.txt |grep -P &#39;2.\\d+ MiB/s&#39;<br> Writing objects: 100% (6/6), 2.97 KiB | <code>2.97 MiB/s</code>, done.</p></blockquote><h3 id="i-ignore-case-查找时不区分大小写" tabindex="-1">-i --ignore-case 查找时不区分大小写 <a class="header-anchor" href="#i-ignore-case-查找时不区分大小写" aria-label="Permalink to &quot;-i --ignore-case 查找时不区分大小写&quot;">​</a></h3><p>默认情况下是 <code>--no-ignore-case</code> 查找时区分大小写</p><blockquote><p>phantom:~ ydl$ cat a.txt |grep -P &#39;2.\\d+ Mi<code>b</code>/s&#39; <code>-i</code><br> Writing objects: 100% (6/6), 2.97 KiB | <code>2.97 MiB/s</code>, done.</p></blockquote><h3 id="输出控制" tabindex="-1">输出控制 <a class="header-anchor" href="#输出控制" aria-label="Permalink to &quot;输出控制&quot;">​</a></h3><h4 id="o-only-matching-只显示匹配的内容" tabindex="-1">-o --only-matching 只显示匹配的内容 <a class="header-anchor" href="#o-only-matching-只显示匹配的内容" aria-label="Permalink to &quot;-o --only-matching 只显示匹配的内容&quot;">​</a></h4><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">phantom:~</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ydl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a.txt</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -oP</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;2.\\d+ MiB/s&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">2.97</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> MiB/s</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="r-recursive-递归目录查找" tabindex="-1">-r --recursive 递归目录查找 <a class="header-anchor" href="#r-recursive-递归目录查找" aria-label="Permalink to &quot;-r --recursive 递归目录查找&quot;">​</a></h4><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 递归当前目录，查找当前目录所有包含text的文件内容</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">grep</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 选出文本中的test</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">grep</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -oaPr</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="include-glob-exclude-glob-包含的文件和不包含的文件" tabindex="-1">--include=GLOB/--exclude=GLOB 包含的文件和不包含的文件 <a class="header-anchor" href="#include-glob-exclude-glob-包含的文件和不包含的文件" aria-label="Permalink to &quot;--include=GLOB/--exclude=GLOB 包含的文件和不包含的文件&quot;">​</a></h4><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查找当前目录下的所有文件中的内容，且包含a.txt这个文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">grep</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -oP</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;2.\\d+ MiB/s&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --include=a.txt</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 不包含a.txt这个文件进行查找</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">grep</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -oP</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;2.\\d+ MiB/s&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --exclude=a.txt</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="a-text-把二进制文件当做-text-文本进行查找" tabindex="-1">-a, --text 把二进制文件当做 text 文本进行查找 <a class="header-anchor" href="#a-text-把二进制文件当做-text-文本进行查找" aria-label="Permalink to &quot;-a, --text 把二进制文件当做 text 文本进行查找&quot;">​</a></h4><h3 id="上下文控制" tabindex="-1">上下文控制 <a class="header-anchor" href="#上下文控制" aria-label="Permalink to &quot;上下文控制&quot;">​</a></h3><h4 id="b-before-context-num-输出命中内容及之前的行数" tabindex="-1">-B, --before-context=NUM 输出命中内容及之前的行数 <a class="header-anchor" href="#b-before-context-num-输出命中内容及之前的行数" aria-label="Permalink to &quot;-B, --before-context=NUM  输出命中内容及之前的行数&quot;">​</a></h4><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Delta</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compression</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> using</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> up</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> threads.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Compressing</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> objects:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 100%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (6/6), done.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Writing</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> objects:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 100%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (6/6), 2.97 KiB </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 2.97</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> MiB/s,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> done.</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="a-after-context-num-输出命中内容及以下的行数" tabindex="-1">-A, --after-context=NUM 输出命中内容及以下的行数 <a class="header-anchor" href="#a-after-context-num-输出命中内容及以下的行数" aria-label="Permalink to &quot;-A, --after-context=NUM 输出命中内容及以下的行数&quot;">​</a></h4><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Writing objects: 100% (6/6), 2.97 KiB | 2.97 MiB/s, done.</span></span>
<span class="line"><span>Total 6 (delta 2), reused 0 (delta 0)</span></span>
<span class="line"><span>remote: Resolving deltas: 100% (2/2), completed with 2 local objects.</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="c-context-num-输出命中内容上下各行数" tabindex="-1">-C, --context=NUM 输出命中内容上下各行数 <a class="header-anchor" href="#c-context-num-输出命中内容上下各行数" aria-label="Permalink to &quot;-C, --context=NUM 输出命中内容上下各行数&quot;">​</a></h4><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">phantom:~</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ydl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a.txt</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;2.97 MiB/s&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -C</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Delta</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compression</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> using</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> up</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> threads.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Compressing</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> objects:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 100%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (6/6), done.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Writing</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> objects:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 100%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (6/6), 2.97 KiB </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 2.97</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> MiB/s,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> done.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Total</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (delta </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), reused 0 (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">delta</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">remote:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Resolving</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> deltas:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 100%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (2/2), completed with 2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> objects.</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h4 id="color-高亮显示-always-never-or-auto" tabindex="-1">--color 高亮显示，&#39;always&#39;, &#39;never&#39;, or &#39;auto&#39; <a class="header-anchor" href="#color-高亮显示-always-never-or-auto" aria-label="Permalink to &quot;--color 高亮显示，&#39;always&#39;, &#39;never&#39;, or &#39;auto&#39;&quot;">​</a></h4><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 默认选择高亮，</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">phantom:~</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ydl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a.txt</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -P</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;2.\\d+ MiB/s&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --color</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Writing</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> objects:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 100%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (6/6), 2.97 KiB </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 2.97</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> MiB/s,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> done.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># never 不高亮，auto和always会高亮匹配中的文本</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">phantom:~</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ydl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a.txt</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -P</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;2.\\d+ MiB/s&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --color=never</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Writing</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> objects:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 100%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (6/6), 2.97 KiB </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 2.97</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> MiB/s,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> done.</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="五花八门的一些命令" tabindex="-1">五花八门的一些命令 <a class="header-anchor" href="#五花八门的一些命令" aria-label="Permalink to &quot;五花八门的一些命令&quot;">​</a></h3><h4 id="v-反选-就是输出匹配内容以外的信息" tabindex="-1">-v 反选，就是输出匹配内容以外的信息 <a class="header-anchor" href="#v-反选-就是输出匹配内容以外的信息" aria-label="Permalink to &quot;-v 反选，就是输出匹配内容以外的信息&quot;">​</a></h4><p>查找文本中不包含<code>2.\\d+</code>内容的行</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">phantom:~</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ydl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a.txt</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">grep</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -P</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;2.\\d+&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> changed,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 192</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> insertions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Counting</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> objects:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 6,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> done.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Delta</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compression</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> using</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> up</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> threads.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Compressing</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> objects:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 100%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (6/6), done.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Total</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (delta </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), reused 0 (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">delta</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">To</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> github.com:deliangyang/sntflyv.github.io.git</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   1600d5e..9f69e31</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  master</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> -</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> master</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h3><ol><li>通常情况下用的比较多的参数是 <code>-oP</code> 或 <code>-vP</code>，正则选中或者正则反选输出</li><li>grep 结合正则表达式方便我们可以很快的在大文件或者目录中查找我们想要的信息</li><li>grep 更多的参数信息可以通过<code>man grep</code>，翻阅手册获取</li><li>作为程序员，文本处理怎么高效怎么来，当我们拿到需求的时候，过滤查找日志等信息是，第一时间不是写代码，而是想想这个需求是否可以通过 grep 来处理。</li></ol>`,37)]))}const o=i(l,[["render",t]]);export{g as __pageData,o as default};
