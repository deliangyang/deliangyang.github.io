import{_ as i,c as a,a3 as e,o as t}from"./chunks/framework.BOyF8YV7.js";const d=JSON.parse('{"title":"ClickHouse 列式数据库：高效处理海量数据的利器","description":"ClickHouse是一个高效的列式数据库管理系统(DBMS)，擅长处理非关联数据和海量日志型数据，具有良好的数据压缩效果。本文简要介绍ClickHouse的数据类型，并提供查询数据类型的SQL语句。","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://blog.ranchulin.com/t/大数据/ClickHouse/数据写入.html"}],["meta",{"property":"og:title","title":"ClickHouse 列式数据库：高效处理海量数据的利器"}],["meta",{"property":"og:url","content":"https://blog.ranchulin.com/t/大数据/ClickHouse/数据写入.html"}],["meta",{"name":"keywords","content":"ClickHouse,列式数据库,DBMS,数据压缩,非关联数据存储,海量日志型数据存储,SQL,数据类型"}]]},"headers":[],"relativePath":"t/大数据/ClickHouse/数据写入.md","filePath":"t/大数据/ClickHouse/数据写入.md","lastUpdated":1736299776000}'),l={name:"t/大数据/ClickHouse/数据写入.md"};function n(o,s,h,r,k,p){return t(),a("div",null,s[0]||(s[0]=[e('<h3 id="clickhouse-列式数据库" tabindex="-1">ClickHouse 列式数据库 <a class="header-anchor" href="#clickhouse-列式数据库" aria-label="Permalink to &quot;ClickHouse 列式数据库&quot;">​</a></h3><blockquote><p>ClickHouse 是一个列式数据库，DBMS，对数据压缩效果好，应用场景非关联数据存储，海量日志型数据存储<br> 这里就不介绍安装使用了，关于安装，官方文档有很详细的安装说明，google 搜索也是一大片，没有必要详细介绍</p></blockquote><h3 id="数据类型" tabindex="-1">数据类型 <a class="header-anchor" href="#数据类型" aria-label="Permalink to &quot;数据类型&quot;">​</a></h3><p>使用如下 SQL 可以查看到 clickhouse 中的数据类型</p><ul><li>name-名称</li><li>case_insensitive-是否大小写敏感</li><li>alias_to 别名</li></ul><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> FROM</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> system</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">data_type_families</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> and</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> alias_to </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>',6)]))}const u=i(l,[["render",n]]);export{d as __pageData,u as default};
