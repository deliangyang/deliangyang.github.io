import{_ as a,c as i,a3 as n,o as e}from"./chunks/framework.BOyF8YV7.js";const c=JSON.parse('{"title":"Mastering Linux Shell Commands for Efficient Text & Log Processing","description":"Learn powerful Linux shell commands for efficient text and log processing. This guide covers grep, sed, awk, sort, and jq, demonstrating their usage with practical examples, including  handling JSON data and processing large log files.  Optimize your workflow with these essential tools.","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://blog.ranchulin.com/t/Linux/2019/2019-12-17-grep-awk-sed-sort-etc.html"}],["meta",{"property":"og:title","title":"Mastering Linux Shell Commands for Efficient Text & Log Processing"}],["meta",{"property":"og:url","content":"https://blog.ranchulin.com/t/Linux/2019/2019-12-17-grep-awk-sed-sort-etc.html"}],["meta",{"name":"keywords","content":"Linux,shell,grep,sed,awk,sort,jq,command-line,JSON processor,log processing,text processing,regular expression,regex,perl-regexp,file searching,string manipulation,data extraction,bash scripting"}]]},"headers":[],"relativePath":"t/Linux/2019/2019-12-17-grep-awk-sed-sort-etc.md","filePath":"t/Linux/2019/2019-12-17-grep-awk-sed-sort-etc.md","lastUpdated":1736299776000}'),l={name:"t/Linux/2019/2019-12-17-grep-awk-sed-sort-etc.md"};function t(h,s,p,r,k,d){return e(),i("div",null,s[0]||(s[0]=[n(`<h3 id="linux-神奇的-shell-命令" tabindex="-1">Linux 神奇的 shell 命令 <a class="header-anchor" href="#linux-神奇的-shell-命令" aria-label="Permalink to &quot;Linux 神奇的 shell 命令&quot;">​</a></h3><p>为什么推荐 linux 的 shell，是因为在工作中使用 shell 清洗几百 G 的日志，可以很高效的完成，<br> 可以少些很多的代码。</p><h3 id="grep-文件查找" tabindex="-1">Grep 文件查找 <a class="header-anchor" href="#grep-文件查找" aria-label="Permalink to &quot;Grep 文件查找&quot;">​</a></h3><h4 id="p-正则匹配-perl-regexp-style" tabindex="-1">-P 正则匹配 perl-regexp style <a class="header-anchor" href="#p-正则匹配-perl-regexp-style" aria-label="Permalink to &quot;-P 正则匹配 perl-regexp style&quot;">​</a></h4><h4 id="v-和-o-正好相反-v-取反-不包含的行-o-这是选择匹配中的元素" tabindex="-1">-v 和 -o 正好相反，-v 取反，不包含的行，-o 这是选择匹配中的元素 <a class="header-anchor" href="#v-和-o-正好相反-v-取反-不包含的行-o-这是选择匹配中的元素" aria-label="Permalink to &quot;-v 和 -o 正好相反，-v 取反，不包含的行，-o 这是选择匹配中的元素&quot;">​</a></h4><h4 id="color-c-高亮配置的元素" tabindex="-1">--color, -c 高亮配置的元素 <a class="header-anchor" href="#color-c-高亮配置的元素" aria-label="Permalink to &quot;--color, -c 高亮配置的元素&quot;">​</a></h4><h4 id="c-匹配的个数" tabindex="-1">-c 匹配的个数 <a class="header-anchor" href="#c-匹配的个数" aria-label="Permalink to &quot;-c 匹配的个数&quot;">​</a></h4><h4 id="a-after-b-before-c-after-and-before-显示匹配中的前几行-后几行-前后几行" tabindex="-1">-A after, -B before, -C after and before，显示匹配中的前几行，后几行，前后几行 <a class="header-anchor" href="#a-after-b-before-c-after-and-before-显示匹配中的前几行-后几行-前后几行" aria-label="Permalink to &quot;-A after, -B before, -C after and before，显示匹配中的前几行，后几行，前后几行&quot;">​</a></h4><h4 id="待补充" tabindex="-1">待补充 <a class="header-anchor" href="#待补充" aria-label="Permalink to &quot;待补充&quot;">​</a></h4><h3 id="sed-替换" tabindex="-1">sed 替换 <a class="header-anchor" href="#sed-替换" aria-label="Permalink to &quot;sed 替换&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 123</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sed</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;s/2/4/g&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="awk" tabindex="-1">awk <a class="header-anchor" href="#awk" aria-label="Permalink to &quot;awk&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">awk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [-F </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">field-separator]</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;commands&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> input-file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;a\\tb\\tc&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> awk</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;{print $1}&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="f-f-t-f-b-切分标志-支持正则表达式" tabindex="-1">-F -F&quot;\\t&quot; -F&quot;b&quot; 切分标志，支持正则表达式 <a class="header-anchor" href="#f-f-t-f-b-切分标志-支持正则表达式" aria-label="Permalink to &quot;-F -F&quot;\\t&quot; -F&quot;b&quot; 切分标志，支持正则表达式&quot;">​</a></h4><h4 id="commands-支持条件控制" tabindex="-1">commands 支持条件控制 <a class="header-anchor" href="#commands-支持条件控制" aria-label="Permalink to &quot;commands 支持条件控制&quot;">​</a></h4><h3 id="sort" tabindex="-1">sort <a class="header-anchor" href="#sort" aria-label="Permalink to &quot;sort&quot;">​</a></h3><p>-n, -r, -k</p><h3 id="如何逐行读取" tabindex="-1">如何逐行读取 <a class="header-anchor" href="#如何逐行读取" aria-label="Permalink to &quot;如何逐行读取&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test.txt</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> while</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> read</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> LINE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    echo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> \${LINE}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">done</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="jq-command-line-json-processor" tabindex="-1">jq Command-line JSON processor <a class="header-anchor" href="#jq-command-line-json-processor" aria-label="Permalink to &quot;jq  Command-line JSON processor&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 1.json</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> jq</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;.&#39;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># prety print</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  &quot;test&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;xxxx&quot;,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  &quot;bb&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      &quot;ccccc&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 1.json</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> jq</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;.test&#39;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># xxxx</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 1.json</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> jq</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;.bb[0].ccccc&#39;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 2</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h3 id="demo" tabindex="-1">Demo <a class="header-anchor" href="#demo" aria-label="Permalink to &quot;Demo&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#!/usr/bin/env bash</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> f </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ls</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> request-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	echo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> \${f}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">	gunzip</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> \${f} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> request.log</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">	grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;/api/room/singers&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> request.log</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;\\[\\]\\t{[^}]+}&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Po</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sed</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;s/\\[\\]\\t//g&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> singer.log</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">request.log</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">done</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">grep</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -P</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;(wangsu|rtmp)&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> callback.log</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">grep</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -Po</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;{.+\\[\\]&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sed</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;s/ \\[\\] \\[\\]//g&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> callback.json.log</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> MIC_SINGER_CHANGED</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> im.log</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Po</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;{.+\\[\\]&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sed</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;s/ \\[\\]//g&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> im.json.log</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div>`,23)]))}const g=a(l,[["render",t]]);export{c as __pageData,g as default};
