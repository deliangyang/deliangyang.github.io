import{_ as e,c as a,a3 as i,o as t}from"./chunks/framework.BOyF8YV7.js";const p=JSON.parse(`{"title":"高性能CDN系统架构设计与实现","description":"高性能 CDN 系统架构，基于 OpenResty + Lua、Vue、Kafka、Flink、ClickHouse 等技术栈构建，实现分层缓存、实时缓存清除、本机 WAF、SSL 证书管理、请求改写等功能，并提供完善的后台管理系统，支持日志采集、统计分析、域名管理、访问控制等。  采用边缘节点内容预取技术，优化网页加速和点播加速体验。","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://blog.ranchulin.com/t/Openresty/CDN.html"}],["meta",{"property":"og:title","title":"高性能CDN系统架构设计与实现"}],["meta",{"property":"og:url","content":"https://blog.ranchulin.com/t/Openresty/CDN.html"}],["meta",{"name":"keywords","content":"CDN,OpenResty,Lua,Vue,Kafka,Flink,ClickHouse,Golang,缓存,实时缓存清除,WAF,SSL证书,Let's Encrypt,负载均衡,边缘节点,内容预取,日志采集,实时统计,数据分析,域名管理,访问管理,请求改写,缓存逻辑,分层缓存,网页加速,点播加速"}]]},"headers":[],"relativePath":"t/Openresty/CDN.md","filePath":"t/Openresty/CDN.md","lastUpdated":1736299776000}`),r={name:"t/Openresty/CDN.md"};function o(n,l,u,h,c,s){return t(),a("div",null,l[0]||(l[0]=[i('<h2 id="实现技术栈" tabindex="-1">实现技术栈 <a class="header-anchor" href="#实现技术栈" aria-label="Permalink to &quot;实现技术栈&quot;">​</a></h2><ul><li>Openresty + Lua 接口及系统</li><li>Vue UI 管理界面</li><li>Kafka 日志管道</li><li>Flink 实时统计，历史计算</li><li>ClickHouse 日志存储、日志查询</li><li>Golang 编写工具、内容分发，边缘节点<code>内容预取</code></li></ul><h2 id="分层缓存" tabindex="-1">分层缓存 <a class="header-anchor" href="#分层缓存" aria-label="Permalink to &quot;分层缓存&quot;">​</a></h2><ul><li>用户域名请求 DNS 服务器，DNS 服务器解析域名，指向全局负载均衡服务器上，全局负载均衡服务器将获取离用户最近的缓存服务器， 返回 320 跳转，重定向离用户最近的缓存服务器。</li><li>用户向缓存服务器发起请求 <ul><li>如果缓存服务器有用户所需的缓存，则返回用户所需的内容 <ul><li>命中服务器内存缓存直接返回，命中本地文件缓存，将文件缓存缓存至内存中，淘汰最近最少使用的缓存</li></ul></li><li>如果缓存服务器没有用户所需要的缓存 <ul><li>层层向上一级缓存服务器请求内容，直到追溯到<code>源服务器</code>将内容拉回本地</li></ul></li></ul></li></ul><h2 id="实时缓存清除" tabindex="-1">实时缓存清除 <a class="header-anchor" href="#实时缓存清除" aria-label="Permalink to &quot;实时缓存清除&quot;">​</a></h2><ul><li>API 将<code>一定规则（正则）的URL</code>提交到缓存服务器上，缓存服务器匹配 URL 进行删除，删除内存缓存、以及本地文件缓存</li><li>删除<code>ATS缓存</code></li></ul><h2 id="本机-waf" tabindex="-1">本机 WAF <a class="header-anchor" href="#本机-waf" aria-label="Permalink to &quot;本机 WAF&quot;">​</a></h2><ul><li>SQL 注入，根据 SQL 的特证，判断</li><li>白名单，自由设置 IP 白名单，URL 白名单</li><li>恶意拦截，cc 防御，对于频繁请求的 IP，进行限速，验证</li><li>所有的拦截和 WAF 日志，写入 kafka，供实时统计分析</li></ul><h2 id="保护-web-应用" tabindex="-1">保护 Web 应用 <a class="header-anchor" href="#保护-web-应用" aria-label="Permalink to &quot;保护 Web 应用&quot;">​</a></h2><ul><li>免费颁发 SSL 证书，自动申请，配置，<a href="https://letsencrypt.org/zh-cn/" target="_blank" rel="nofollow noopener noreferrer">Let&#39;s Encrypt</a></li><li>动态配置 SSL 证书，用户上传自己的证书</li></ul><h2 id="请求改写" tabindex="-1">请求改写 <a class="header-anchor" href="#请求改写" aria-label="Permalink to &quot;请求改写&quot;">​</a></h2><ul><li>请求头、响应头、URL 及参数改写 <ul><li>全局负载均衡服务器负责读取用户设置的配置，对配置内容进行修改，如添加 header、删除 header、修改 header 等</li><li>对 URL 重新、重定向等，增加删除 URL 参数</li></ul></li></ul><h2 id="数据和日志采集" tabindex="-1">数据和日志采集 <a class="header-anchor" href="#数据和日志采集" aria-label="Permalink to &quot;数据和日志采集&quot;">​</a></h2><p><a href="https://patents.google.com/patent/CN107332719A/zh" target="_blank" rel="nofollow noopener noreferrer">https://patents.google.com/patent/CN107332719A/zh</a></p><ul><li>错误日志采集 <ul><li>统一写入 kakfa，流式（Flink）实时统计分析</li></ul></li><li>用户请求日志 <ul><li>按域名归档、用户请求日志下载（分时）</li><li>统一写入 kakfa，流式（Flink）实时统计分析</li></ul></li></ul><h2 id="cdn-后台管理系统功能" tabindex="-1">CDN 后台管理系统功能 <a class="header-anchor" href="#cdn-后台管理系统功能" aria-label="Permalink to &quot;CDN 后台管理系统功能&quot;">​</a></h2><ol><li>刷新 CDN <ul><li>用户输入多条 URL，工具异步逐一移除缓存服务器的内存、文件缓存，进度反馈，历史明细</li></ul></li><li>域名管理 <ul><li>接入域名</li><li>域名配置</li><li>SSL 配置，免费、用户自定义上传</li></ul></li><li>统计分析 <ul><li>错误日志</li><li>访问量</li><li>IP</li><li>状态码</li><li>top</li><li>命中率</li></ul></li><li>日志管理 <ul><li>短期内日志查询</li><li>日志归档，批量下载</li></ul></li><li>访问管理 <ul><li>URL、QueryString、header、response 改写</li><li>IP 白名单</li><li>限速</li></ul></li></ol><h2 id="缓存逻辑" tabindex="-1">缓存逻辑 <a class="header-anchor" href="#缓存逻辑" aria-label="Permalink to &quot;缓存逻辑&quot;">​</a></h2><p>网页加速的小文件走边缘节点，大文件走中心节点，点播加速的 热门资源走边缘节点，冷门资源走中心节点，大文件下载加速默认走中心节点这种</p>',19)]))}const f=e(r,[["render",o]]);export{p as __pageData,f as default};
