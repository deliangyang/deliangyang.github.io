import{_ as t,c as s,a3 as n,G as r,j as i,a as l,B as p,o}from"./chunks/framework.BOyF8YV7.js";const E="/assets/wireshark-tcp.BxEdTCDU.png",b=JSON.parse('{"title":"深入理解TCP/IP协议栈：标志位、Wireshark抓包及分层模型详解","description":"本文介绍了TCP/IP协议栈，包括TCP标志位(SYN, ACK, PSH, FIN, RST, URG)，Sequence number和Acknowledge number，并提供了Wireshark过滤条件示例及TCP/IP四层模型和OSI七层模型的图解说明。","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://blog.ranchulin.com/t/网络编程/TCP_IP协议栈.html"}],["meta",{"property":"og:title","title":"深入理解TCP/IP协议栈：标志位、Wireshark抓包及分层模型详解"}],["meta",{"property":"og:url","content":"https://blog.ranchulin.com/t/网络编程/TCP_IP协议栈.html"}],["meta",{"name":"keywords","content":"TCP/IP,TCP,IP,协议栈,标志位,SYN,ACK,PSH,FIN,RST,URG,Sequence number,Acknowledge number,Wireshark,过滤条件,网络接口层,网络互连层,传输层,应用层,OSI七层模型,物理层,数据链路层,网络层,会话层,表示层,HTTP协议"}]]},"headers":[],"relativePath":"t/网络编程/TCP_IP协议栈.md","filePath":"t/网络编程/TCP_IP协议栈.md","lastUpdated":1736299776000}'),c={name:"t/网络编程/TCP_IP协议栈.md"};function h(d,e,P,m,B,u){const a=p("Mermaid");return o(),s("div",null,[e[0]||(e[0]=n(`<h2 id="tcp-ip-协议栈" tabindex="-1">TCP/IP 协议栈 <a class="header-anchor" href="#tcp-ip-协议栈" aria-label="Permalink to &quot;TCP/IP 协议栈&quot;">​</a></h2><h2 id="位码即-tcp-标志位-有-6-种标示" tabindex="-1">位码即 tcp 标志位，有 6 种标示： <a class="header-anchor" href="#位码即-tcp-标志位-有-6-种标示" aria-label="Permalink to &quot;位码即 tcp 标志位，有 6 种标示：&quot;">​</a></h2><ul><li><p>SYN(synchronous 建立联机)</p></li><li><p>ACK(acknowledgement 确认)</p></li><li><p>PSH(push 传送)</p></li><li><p>FIN(finish 结束)</p></li><li><p>RST(reset 重置)</p></li><li><p>URG(urgent 紧急)</p></li><li><p>Sequence number(顺序号码)</p></li><li><p>Acknowledge number(确认号码)</p></li></ul><h3 id="wireshark-过滤条件" tabindex="-1">Wireshark 过滤条件 <a class="header-anchor" href="#wireshark-过滤条件" aria-label="Permalink to &quot;Wireshark 过滤条件&quot;">​</a></h3><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ip.dst == 42.192.78.57 or ip.src == 42.192.78.57</span></span>
<span class="line"><span></span></span>
<span class="line"><span>ip.dst==10.0.2.25 or ip.addr==10.0.2.25</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="wireshark" tabindex="-1">Wireshark <a class="header-anchor" href="#wireshark" aria-label="Permalink to &quot;Wireshark&quot;">​</a></h3><p><img src="`+E+'" alt="img"></p><h3 id="tcp-ip-分层" tabindex="-1">TCP/IP 分层 <a class="header-anchor" href="#tcp-ip-分层" aria-label="Permalink to &quot;TCP/IP 分层&quot;">​</a></h3><h4 id="四层" tabindex="-1">四层 <a class="header-anchor" href="#四层" aria-label="Permalink to &quot;四层&quot;">​</a></h4>',9)),r(a,{id:"mermaid_382ee1e4",graph:"graph%20LR%3B%0A%20%20%20%20%E7%BD%91%E7%BB%9C%E6%8E%A5%E5%8F%A3%E5%B1%82--%3E%E7%BD%91%E7%BB%9C%E4%BA%92%E8%BF%9E%E5%B1%82IP--%3E%E4%BC%A0%E8%BE%93%E5%B1%82TCP--%3E%E5%BA%94%E7%94%A8%E5%B1%82HTTP%E5%8D%8F%E8%AE%AE%E7%AD%89%3B"}),e[1]||(e[1]=i("h4",{id:"osi-七层协议",tabindex:"-1"},[l("OSI 七层协议 "),i("a",{class:"header-anchor",href:"#osi-七层协议","aria-label":'Permalink to "OSI 七层协议"'},"​")],-1)),r(a,{id:"mermaid_382ee1e8",graph:"graph%20LR%3B%0A%20%20%20%20%E7%89%A9%E7%90%86%E5%B1%82-%E5%8F%8C%E7%BB%9E%E7%BA%BF-%E5%85%89%E7%BC%86%0A%20%20%20%20--%3E%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82-wifi-internet%0A%20%20%20%20--%3E%E7%BD%91%E7%BB%9C%E5%B1%82IP%0A%20%20%20%20--%3E%E4%BC%A0%E8%BE%93%E5%B1%82TCP%0A%20%20%20%20--%3E%E4%BC%9A%E8%AF%9D%E5%B1%82%0A%20%20%20%20--%3E%E8%A1%A8%E7%A4%BA%E5%B1%82%0A%20%20%20%20--%3E%E5%BA%94%E7%94%A8%E5%B1%82HTTP%E5%8D%8F%E8%AE%AE%E7%AD%89%3B"})])}const C=t(c,[["render",h]]);export{b as __pageData,C as default};
